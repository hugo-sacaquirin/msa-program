openapi: 3.0.3
info:
  title: Program Management API
  version: '1.0.0'
  description: API for managing institutional programs and their associated projects.

servers:
  - url: http://localhost:8080/api

tags:
  - name: programs
    description: Endpoints for institutional program management

paths:
  /programs:
    post:
      tags:
        - programs
      summary: Register a new program
      operationId: createProgram
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProgramRequest'
      responses:
        '201':
          description: Program successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramResultResponse'
        '400':
          description: Invalid data
        '409':
          description: Duplicate program

  /programs/paged:
    get:
      tags:
        - programs
      summary: Get paged programs
      operationId: getPagedPrograms
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Size'
      responses:
        '200':
          description: Paged list of programs
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramPagedResponse'

  /programs/search:
    get:
      tags:
        - programs
      summary: Search programs with filters
      operationId: searchPrograms
      parameters:
        - $ref: '#/components/parameters/Page'
        - $ref: '#/components/parameters/Size'
        - name: name
          in: query
          schema: { type: string }
        - name: responsible
          in: query
          schema: { type: string }
        - name: type
          in: query
          schema: { type: string }
      responses:
        '200':
          description: Programs found
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramPagedResponse'

  /programs/{id}:
    put:
      tags:
        - programs
      summary: Update an existing program
      operationId: updateProgram
      parameters:
        - $ref: '#/components/parameters/ProgramId'
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/ProgramRequest'
      responses:
        '200':
          description: Program updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/ProgramResultResponse'
        '400':
          description: Invalid data
        '404':
          description: Program not found
        '409':
          description: Duplicate program

    delete:
      tags:
        - programs
      summary: Deactivate a program (set status to 'inactive')
      operationId: deactivateProgram
      parameters:
        - $ref: '#/components/parameters/ProgramId'
      responses:
        '204':
          description: Program successfully deactivated
        '404':
          description: Program not found

components:
  parameters:
    Page:
      name: page
      in: query
      description: Page number (starts at 0)
      schema: { type: integer, default: 0 }
    Size:
      name: size
      in: query
      description: Number of elements per page
      schema: { type: integer, default: 20 }
    ProgramId:
      name: id
      in: path
      required: true
      schema: { type: integer }
      description: Program ID

  schemas:
    ProgramRequest:
      type: object
      required:
        - name
        - description
        - responsible
        - status
        - projectIds
      properties:
        id: { type: integer }
        name: { type: string, minLength: 3, maxLength: 100 }
        description: { type: string, minLength: 3 }
        scope: { type: string }
        responsible: { type: string, minLength: 3, maxLength: 100 }
        status: { type: string }
        projectIds:
          type: array
          items: { type: integer }
          description: List of project IDs associated with this program

    ProgramResponse:
      type: object
      properties:
        id: { type: integer }
        name: { type: string }
        description: { type: string }
        scope: { type: string }
        responsible: { type: string }
        status: { type: string }
        createdAt: { type: string }
        updatedAt: { type: string }
        projects:
          type: array
          items:
            $ref: '#/components/schemas/ProjectSummary'

    ProjectSummary:
      type: object
      properties:
        id: { type: integer }
        name: { type: string }
        projectType: { type: string }

    ProgramResultResponse:
      type: object
      properties:
        code: { type: string }
        result: { type: string }

    ProgramPagedResponse:
      type: object
      properties:
        content:
          type: array
          items:
            $ref: '#/components/schemas/ProgramResponse'
